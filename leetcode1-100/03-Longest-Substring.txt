//jAVA  利用集合HashSet不能包含重复元素

class Solution {
    public int lengthOfLongestSubstring(String s) {
        int len = s.length();
        Set<Character> set = new HashSet<>();
        int res=0, i=0, j=0;
        while(i<len&&j<len){
            if(!set.contains(s.charAt(j))){
                set.add(s.charAt(j++));
                res=Math.max(res,j-i);
            }else{
                set.remove(s.charAt(i++));
            }
        }
        return res;
        
    }
}

//最优算法 转为char数组处理

class Solution {
    public int lengthOfLongestSubstring(String s) {
        
        int max=0;
        int count=0;
        
        char []ch = s.toCharArray();
        for(int i=0; i<ch.length; i++){
            for(int j=count; j<i; j++){
                if(ch[j]==ch[i]){
                    count=j+1;
                    break;
                }
            }
            max=Math.max(max,i-count+1);
        }
        return max;
    }
}