//method one
class Solution {
    public String longestCommonPrefix(String[] strs) {
        if(strs.length == 0)
            return "";
        int len = strs.length;
        String res = strs[0];
        for(int i=1; i<len; i++){
            while(strs[i].indexOf(res)!=0){
                res=res.substring(0,res.length()-1);
                if(res.isEmpty())
                    return "";
            }
        }
        return res;
    }
}

//method two
class Solution {
    public String longestCommonPrefix(String[] strs) {
        if(strs.length == 0) return "";
        else
            return longestCommonPrefix(strs,0,strs.length-1);
    }
    private String longestCommonPrefix(String[] strs, int l, int r){
        if(l==r)
            return strs[l];
        int mid =(l+r)/2;
        String left = longestCommonPrefix(strs,l,mid);
        String right = longestCommonPrefix(strs,mid+1,r);
        return Merge(left,right);
    }
    public String Merge(String left, String right){
        while(right.indexOf(left)!=0){
            left=left.substring(0,left.length()-1);
            if(left.isEmpty())
                return "";
        }
        return left;
    }
}


