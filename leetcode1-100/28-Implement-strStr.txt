//Java

class Solution {
    public int strStr(String haystack, String needle) {
        if(needle.isEmpty()) return 0;
        int m=haystack.length();
        int n=needle.length();
        if(m<n) return -1;
        for(int i=0;i<=m-n;i++){
            int j=0;
            for(j=0;j<n;++j){
                if(haystack.charAt(i+j)!=needle.charAt(j))
                    break;
            }
            if(j==n)    return i;
        }
        return -1;
    }
}

//C++

class Solution {
public:
    int strStr(string haystack, string needle) {
        if (needle.empty()) return 0;
        int m = haystack.size(), n = needle.size();
        if (m < n) return -1;
        for (int i = 0; i <= m - n; ++i) {
            int j = 0;
            for (j = 0; j < n; ++j) {
                if (haystack[i + j] != needle[j]) break;
            }
            if (j == n) return i;
        }
        return -1;
    }
};

